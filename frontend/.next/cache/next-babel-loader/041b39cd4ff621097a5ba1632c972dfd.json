{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shueny/Documents/react-graphQL/frontend/components/Page/index.js\",\n    _this = this;\n\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\n\nvar Index = function Index(props) {\n  var children = props.children,\n      cool = props.cool;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This is Page component!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: cool\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Index;\nexport default Index;\nIndex.propTypes = {\n  cool: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.node)\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/shueny/Documents/react-graphQL/frontend/components/Page/index.js"],"names":["PropTypes","React","useEffect","useState","Index","props","children","cool","propTypes","string","arrayOf","node"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfC,QADe,GACID,KADJ,CACfC,QADe;AAAA,MACLC,IADK,GACIF,KADJ,CACLE,IADK;AAEvB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,aAFF,EAGGD,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CATD;;KAAMF,K;AAUN,eAAeA,KAAf;AAEAA,KAAK,CAACI,SAAN,GAAkB;AAChBD,EAAAA,IAAI,EAAEP,SAAS,CAACS,MADA;AAEhBH,EAAAA,QAAQ,EAAEN,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACW,IAA5B;AAFM,CAAlB","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Index = (props) => {\n  const { children, cool } = props;\n  return (\n    <div>\n      <h2>This is Page component!</h2>\n      <h3>{cool}</h3>\n      {children}\n    </div>\n  );\n};\nexport default Index;\n\nIndex.propTypes = {\n  cool: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.node),\n};\n"]},"metadata":{},"sourceType":"module"}